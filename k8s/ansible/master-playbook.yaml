---
- hosts: all
  gather_facts: false
  tasks:
    - copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Add overlay
      modprobe:
        name: overlay
        state: present

    - name: Add br_netfilter
      modprobe:
        name: br_netfilter
        state: present

    - copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - shell: sysctl -p --system
      become: yes

    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest

    - name: Install containerd
      become: yes
      apt:
        name: containerd
        state: present

    - name: Create containerd directory
      become: yes
      ansible.builtin.file:
        path: /etc/containerd
        state: directory

    - name: create containerd toml file
      shell: containerd config default
      become: yes
      register: output

    - name: copy continerd output to a toml file
      become: yes
      copy:
        content: "{{ output.stdout }}"
        dest: "/etc/containerd/config.toml"

    - name: Restart containerd
      become: yes
      service:
        name: containerd
        state: restarted
    
    - name: Disable swap
      command: swapoff -a

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: install packages
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - curl
        - gnupg-agent
        - software-properties-common
        - ca-certificates

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest
    
    - name: install packages
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet=1.20.1-00
          - kubeadm=1.20.1-00
          - kubectl=1.20.1-00
          
    - name: Hold kubeadm
      dpkg_selections:
        name: kubelet
        selection: hold
    
    - name: Hold kubeadm
      dpkg_selections:
        name: kubeadm
        selection: hold

    - name: Hold kubeadm
      dpkg_selections:
        name: kubectl
        selection: hold

    - name: kubeadm init
      become: yes
      shell: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name master --pod-network-cidr=10.10.0.0/16 --service-cidr=10.11.0.0/16
    - name: Create kube directory
      become: yes
      ansible.builtin.file:
        path: /home/vagrant/.kube
        state: directory

    - name: copy kube config file
      become: yes
      shell: cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config

    - name: copy kube config file
      become: yes
      shell: chown vagrant:vagrant /home/vagrant/.kube/config

    - name: install calcio pod network
      become: false
      command: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml

    - name: Generate join command
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      become: false
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

    - name: write ip's and host name to etc-hosts
      become: yes
      lineinfile:
        dest: /etc/hosts
        insertbefore: "127.0.0.1"
        line: "{{ item }}"
        firstmatch: yes
      loop:
        - "192.168.50.10   master   master"
        - "192.168.200.11   worker-1   worker-1"
        - "192.168.200.12   worker-2   worker-2"

    - name: Iptables flush filter
      become: yes
      ansible.builtin.iptables:
        chain: "{{ item }}"
        flush: yes
      with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
    
    - name: Iptables flush nat
      become: yes
      ansible.builtin.iptables:
        table: nat
        chain: '{{ item }}'
        flush: yes
      with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]
    
    - name: Ensure sysctl net.ipv4.ip_forward is set to 1
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: yes
    
    - name: system daemon reload
      become: yes
      shell: systemctl daemon-reload

    - name: Restart service kubelet, in all cases
      become: yes
      ansible.builtin.service:
        name: kubelet
        state: restarted

  handlers:
    - name: docker status
      service: name=docker state=started
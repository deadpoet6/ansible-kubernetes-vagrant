---
- hosts: all
  gather_facts: true
  tasks:
    # - name: verify ip's 1
    #   debug:
    #     msg: "{{ansible_all_ipv4_addresses[1]}}"
    
    # - name: verify ip's all
    #   debug:
    #     msg: "{{ansible_all_ipv4_addresses}}"

    # - name: verify ip's 0
    #   debug:
    #     msg: "{{ansible_all_ipv4_addresses[0]}}"

    - name: Disable swap
      command: swapoff -a

    - name: get ip
      shell: current_ip=$(/sbin/ip -o -4 addr list enp0s8 | awk '{print $4}' | cut -d/ -f1)

    - name: Remove swapfile from /etc/fstab
      mount:
        name: swap
        fstype: swap
        state: absent

    - name: Update all packages to their latest version
      apt:
        name: "*"
        state: latest

    # - name: install packages
    #   become: yes
    #   apt:
    #     name: "{{ packages }}"
    #     state: present
    #     update_cache: yes
    #   vars:
    #     packages:
    #     - apt-transport-https
    #     - curl
    #     - gnupg-agent
    #     - software-properties-common
    #     - ca-certificates
    - name: install k3s on master-1 node
      become: yes
      shell: echo "127.0.1.1 $(hostname)" >> /etc/hosts

    - name: write ip's and host name to etc-hosts
      become: yes
      lineinfile:
        dest: /etc/hosts
        insertbefore: "127.0.0.1"
        line: "{{ item }}"
        firstmatch: yes
      loop:
        - "10.0.0.11   master-1   master-1"
        - "10.0.0.12   master-2   master-2"
        - "10.0.0.13   master-3   master-3"
        - "10.0.0.21   worker-1   worker-1"
        - "10.0.0.22   worker-2   worker-2"
        - "10.0.0.23   worker-3   worker-3"
        
    - name: install k3s on master-1 node
      become: yes
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --cluster-init --tls-san $(hostname) --bind-address=$(current_ip) --advertise-address=$(current_ip) --node-ip=$(current_ip)  --cluster-cidr=10.10.0.0/16 --service-cidr=10.11.0.0/16 --flannel-iface=enp0s8 --no-deploy=traefik" sh -s
      when: ansible_facts['nodename'] == "master-1" #

    - name: output the join token
      become: yes
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: join_token
      when: ansible_facts['nodename'] == "master-1"

    - name: Copy join token to local file
      become: yes
      local_action: copy content="{{ join_token.stdout_lines[0] }}" dest="./node-token"
      when: ansible_facts['nodename'] == "master-1"

    - name: copy token in to master nodes
      become: yes
      copy: src=node-token dest=/tmp/node-token mode=0777
      when: (ansible_facts['nodename'] == "master-2") or (ansible_facts['nodename'] == "master-3")

    - name: apply the join token to the master nodes
      become: yes
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --server https://master-1:6443 --token-file /tmp/node-token --tls-san $(hostname) --bind-address=$(current_ip) --advertise-address=$(current_ip) --node-ip=$(current_ip) --cluster-cidr=10.10.0.0/16 --service-cidr=10.11.0.0/16 --flannel-iface=enp0s8 --no-deploy=traefik" sh -
      when: (ansible_facts['nodename'] == "master-2") or (ansible_facts['nodename'] == "master-3") #

    - name: Iptables flush filter
      become: yes
      ansible.builtin.iptables:
        chain: "{{ item }}"
        flush: yes
      with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
    
    - name: Iptables flush nat
      become: yes
      ansible.builtin.iptables:
        table: nat
        chain: '{{ item }}'
        flush: yes
      with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]
    
    - name: Ensure sysctl net.ipv4.ip_forward is set to 1
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        state: present
        reload: yes
    
    - name: system daemon reload
      become: yes
      shell: systemctl daemon-reload

    - name: change file permissions
      become: yes
      ansible.builtin.file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0777'
      when: ansible_facts['nodename'] == "master-1"

    - name: copy the config file to working directory
      become: yes
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/vagrant/
        mode: '0777'
      when: ansible_facts['nodename'] == "master-1"

    - name: pause the process
      pause:
        seconds: 60